@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");

:root {
  --primary-color: #7f8ced;
  --primary-color-dark: #5867e8;
  --sun-color: #eda97f;
  --moon-color: #7fc3ed;
  --bg: hsl(0, 100%, 10%);
  --color: hsl(0, 0%, 100%);
  --underline-width: 8px;
  --underline-block-width: 20px;
  --underline-transition: 0.5s;
}

.light-mode {
  --text-color: #444452;
  --background-color: #f8fbf8;
  --h2-color: rgba(236, 72, 153);
  --underline-color: rgba(236, 72, 153);
  --underline-color-hover: rgb(219, 55, 137);
}

.dark-mode {
  --text-color: #ffffff;
  --background-color: #111827;
  --h2-color: #64ffda;
  --underline-color: #64ffda;
  --underline-color-hover: #1cd1a7;
}

* {
  font-family: "Poppins", sans-serif;
  color: var(--text-color);
}

@media (max-width: 5in) {
  .logo {
    top: 20px;
    right: 265px;
  }
}

html,
body {
  margin: 0;
  background-color: var(--background-color);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 400;
}

b {
  font-weight: 600;
}

a {
  color: var(--primary-color);
  text-decoration: none;
}

a:hover {
  color: var(--primary-color-dark);
}

i {
  color: inherit;
}

.hidden {
  display: none;
}

.fa-stack {
  width: 2em;
}

.fa-square {
  color: white;
  transform: scale(0.9);
}

*::selection {
  background: var(--moon-color);
  color: white;
}

.container {
  padding: 0rem 1rem;
  width: 100%;
  box-sizing: border-box;
}

.hero {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.hero-content {
  order: 2;
}

.hero-image {
  order: 1;
  width: 200px;
}

@media (max-width: 875px) {
  .hero-image {
    display: none;
  }
}

.hero-text {
  margin: 0 0 0.25rem 0;
  font-size: 145%;
}

.hero-text-main {
  margin: 0 0 0.5rem 0;
  font-size: 350%;
}

.hero-icons {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  padding-top: 0.25rem;
}

.hero-icons > *:not(:last-child) {
  margin-right: 1rem;
}

.resume-button {
  font-size: 0.75rem;
  color: white;
  background-color: var(--primary-color);
  border-radius: 3px;
  padding: 5px 15px;
  margin-top: -1px;
}

.resume-button:hover {
  color: white;
  background-color: var(--primary-color-dark);
}

@media screen and (min-width: 432px) {
  .hero-image {
    width: 500px;
  }
}

@media screen and (min-width: 1300px) {
  .container {
    width: 1250px;
    margin: 0 auto;
  }

  .hero {
    flex-direction: row;
    justify-content: space-between;
  }

  .hero-content {
    order: 2;
  }

  .hero-image {
    order: 1;
  }
}

.text-pink-500 {
  --tw-text-opacity: 1;
  color: var(--h2-color);
}

.text-pink-500 b {
  --tw-text-opacity: 1;
  color: var(--h2-color);
}

.langICO {
  width: 35px;
  height: 35px;
  cursor: pointer;
}

/* Link Hover Effect */
.underline {
  color: var(--color);
  text-decoration: none;
  background-image: linear-gradient(90deg, var(--bg), var(--bg)),
    linear-gradient(90deg, var(--underline-color), var(--underline-color));
  background-size: var(--underline-block-width) var(--underline-width),
    100% var(--underline-width);
  background-repeat: no-repeat;
  background-position-x: calc(var(--underline-block-width) * -1), 0;
  background-position-y: 100%;
  transition: background-position-x var(--underline-transition);
}

.underline:hover {
  background-image: linear-gradient(90deg, var(--bg), var(--bg)),
    linear-gradient(
      90deg,
      var(--underline-color-hover),
      var(--underline-color-hover)
    );
  background-position-x: calc(100% + var(--underline-block-width)), 0;
}

/* Emoji Wave */

.wave {
  animation-name: wave-animation; /* Refers to the name of your @keyframes element below */
  animation-duration: 2.5s; /* Change to speed up or slow down */
  animation-iteration-count: infinite; /* Never stop waving :) */
  transform-origin: 70% 70%; /* Pivot around the bottom-left palm */
  display: inline-block;
}

@keyframes wave-animation {
  0% {
    transform: rotate(0deg);
  }
  10% {
    transform: rotate(14deg);
  } /* The following five values can be played with to make the waving more or less extreme */
  20% {
    transform: rotate(-8deg);
  }
  30% {
    transform: rotate(14deg);
  }
  40% {
    transform: rotate(-4deg);
  }
  50% {
    transform: rotate(10deg);
  }
  60% {
    transform: rotate(0deg);
  } /* Reset for the last half to pause */
  100% {
    transform: rotate(0deg);
  }
}

/* Sroll back to top button */

#myBtn {
  background-color: transparent;
  display: none;
  position: fixed;
  bottom: 40px;
  right: 35px;
  z-index: 99;
  cursor: pointer;
}
